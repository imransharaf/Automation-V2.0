package PageUtilities;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */






import javax.swing.filechooser.FileNameExtensionFilter;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.PageFactory;

import javax.swing.JFileChooser;


/**
 *
 * @author Imran
 */
public class AutomationGUI extends javax.swing.JDialog {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
     * Creates new form NewJDialog
     */
    
	WebDriver driver;
	
	public AutomationGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
   

	public AutomationGUI(WebDriver driver) {
		this.driver = driver;
		 
        //This initElements method will create all WebElements
        PageFactory.initElements(driver, this);
	}



	/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        UserNameTextField = new javax.swing.JTextField();
        UserNameLabel = new javax.swing.JLabel();
        PasswordLabel = new javax.swing.JLabel();
        PasswordTextField = new javax.swing.JPasswordField();
        DataPathLabel = new javax.swing.JLabel();
        DataPathTextField = new javax.swing.JTextField();
        DataFilePathButton = new javax.swing.JToggleButton();
        ResultFilePathLabel = new javax.swing.JLabel();
        ResultFilePathField = new javax.swing.JTextField();
        ResultFilePathButton = new javax.swing.JToggleButton();
        EnvironementLabel = new javax.swing.JLabel();
        EnvironmentComboBox = new javax.swing.JComboBox<>();
        AUTLabel = new javax.swing.JLabel();
        AUTComboBox = new javax.swing.JComboBox<>();
        SalesforceTestAutoLabel = new javax.swing.JLabel();
        ResetButton = new javax.swing.JButton();
        SubmitButton = new javax.swing.JButton();
        ExitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        UserNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserNameTextFieldActionPerformed(evt);
            }
        });

        

        SalesforceTestAutoLabel.setFont(new java.awt.Font("Tekton Pro", 1, 18)); // NOI18N
        SalesforceTestAutoLabel.setForeground(new java.awt.Color(51, 51, 255));
        SalesforceTestAutoLabel.setText("SALESFORCE    TEST    AUTOMATION");
        
        
        
        UserNameLabel.setText("Username");
        PasswordLabel.setText("Password");
 

        //*******************************Setup Result File Save in Field*********************************
          
        DataPathLabel.setText("Data File Path");
    /*    DataPathTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataPathTextFieldActionPerformed(evt);
            }
        });
*/

        //*******************************Setup DatafileBath Browse Button*********************************
          
        DataFilePathButton.setText("Browse");
        DataFilePathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataFilePathButtonActionPerformed(evt);
            }
        });

      //*******************************Setup Result File Save in Field*********************************
        
        ResultFilePathLabel.setText("Result File Save in");
        ResultFilePathButton.setText("Browse");
        ResultFilePathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResultFilePathButtonActionPerformed(evt);
            }
        });

      //*******************************Setup Environment ComboBox*********************************
        EnvironementLabel.setText("Environment");
        EnvironmentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "QA", "Dev", "Stage", "Operations", "Production" }));

        AUTLabel.setText("Application Under Test");
        AUTComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "APTTUS", "Workday", "Tenrox" }));

//*******************************Setup Reset Button*********************************
        
        ResetButton.setText("Reset");
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });


 //*******************************Setup Submit Button*********************************        
        
        SubmitButton.setText("Submit");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });

//*******************************Setup Exit Button*********************************
        ExitButton.setText("Exit");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        
 //***************************Pane and Content Layout **********************************************************************       
        
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AUTLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(AUTComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(EnvironementLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(EnvironmentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ResultFilePathLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ResultFilePathField, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ResultFilePathButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(PasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(PasswordTextField))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(UserNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(UserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(SalesforceTestAutoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DataPathLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(DataPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(DataFilePathButton)))
                .addContainerGap(90, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(ResetButton)
                .addGap(130, 130, 130)
                .addComponent(SubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ExitButton)
                .addGap(111, 111, 111))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SalesforceTestAutoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UserNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DataPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DataPathLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DataFilePathButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ResultFilePathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ResultFilePathLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ResultFilePathButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EnvironementLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EnvironmentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AUTLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AUTComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ResetButton)
                    .addComponent(SubmitButton)
                    .addComponent(ExitButton))
                .addGap(61, 61, 61))
        );

        pack();
    }// </editor-fold>                        

    
//***************************Browse Button for Data file Path **********************************************************************           
   
    private void DataFilePathButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        JFileChooser fileopen = new JFileChooser();
				fileopen.setDialogTitle("Select Excel Data file");
				fileopen.setAcceptAllFileFilterUsed(false);
				
				//select only Excel File
				FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel", "xlsx", "xls");
                fileopen.addChoosableFileFilter(filter);
                                
                int ret = fileopen.showDialog(null, "OK");
                
                if (ret == JFileChooser.APPROVE_OPTION) {
                DataPathTextField.setText(fileopen.getSelectedFile().toString());
                }          
    }                                                  
    
    
//***************************Browse Button for Result file Path **********************************************************************  
    
    private void ResultFilePathButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                     
       JFileChooser fileopen = new JFileChooser();
				fileopen.setCurrentDirectory(new java.io.File("."));
				fileopen.setDialogTitle("Select Directory to save Result File");
				fileopen.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
				fileopen.setAcceptAllFileFilterUsed(false);
				
				//Only allow to pick directories
				FileNameExtensionFilter filter = new FileNameExtensionFilter("Directories Only"," ");
                fileopen.addChoosableFileFilter(filter);
				
                int ret = fileopen.showDialog(null, "OK");
                
                if (ret == JFileChooser.APPROVE_OPTION) {
                	ResultFilePathField.setText(fileopen.getSelectedFile().toString());
                
                }
    }                                                    

    private void UserNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // TODO add your handling code here:
    }                                                 

    //***************************Reset Button Functionality **********************************************************************    
    
    
    private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
                   UserNameTextField.setText("");
		           PasswordTextField.setText("");
		           DataPathTextField.setText("");
		           ResultFilePathField.setText(""); 
		           EnvironmentComboBox.setSelectedIndex(0);
		           AUTComboBox.setSelectedIndex(0);
    }                                           

                                                     

  
  //***************************Submit Button Functionality **********************************************************************    
    
    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
                       	
                	
                	String sUsername = UserNameTextField.getText().trim();
                	//System.out.println("A_Username :" + sUsername);
                	
                    String sPassword = new String(PasswordTextField.getPassword());
                    //System.out.println("A_Password: " + sPassword);
               	                   
                    String sDataFile = DataPathTextField.getText().trim(); 
	            	//System.out.println("A_DataFile Path :" + sDataFile);
	            		                    
	            	String sResultFile = ResultFilePathField.getText().trim(); 
	            	//System.out.println("A_ResultFile: " + sResultFile);
	            	
	            	String sEnvironmant = EnvironmentComboBox.getSelectedItem().toString();
	            	//System.out.println("A_Environment: " + EnvironmentComboBox.getSelectedItem());
	            	
	            	String sAUT = AUTComboBox.getSelectedItem().toString();
	            	//System.out.println("A_Application: " + AUTComboBox.getSelectedItem());
	            	
	            	//System.exit(0);
	            	
	               setValues(sUsername,sPassword, sDataFile, sResultFile, sEnvironmant, sAUT );
	            	
	            	
    }                                            

    
    public String[] setValues(String sUsername, String sPassword, String sDataFile, String sResultFile, String sEnvironmant, String sAUT ){
    
    			String[] returnStrings = {sUsername,sPassword, sDataFile, sResultFile, sEnvironmant, sAUT };
    			return returnStrings;
    	 
    }
    
    
  //***************************Exit Button Functionality **********************************************************************  
   
    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        System.exit(0);
    }                                          

    
  //***************************Starting Main Program **********************************************************************   
    //
    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
       
    public void Menu(){
    /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AutomationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AutomationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AutomationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AutomationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AutomationGUI dialog = new AutomationGUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JComboBox<String> AUTComboBox;
    private javax.swing.JLabel AUTLabel;
    private javax.swing.JToggleButton DataFilePathButton;
    private javax.swing.JLabel DataPathLabel;
    private javax.swing.JTextField DataPathTextField;
    private javax.swing.JLabel EnvironementLabel;
    private javax.swing.JComboBox<String> EnvironmentComboBox;
    private javax.swing.JButton ExitButton;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JPasswordField PasswordTextField;
    private javax.swing.JButton ResetButton;
    private javax.swing.JToggleButton ResultFilePathButton;
    private javax.swing.JTextField ResultFilePathField;
    private javax.swing.JLabel ResultFilePathLabel;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JLabel UserNameLabel;
    private javax.swing.JTextField UserNameTextField;
    private javax.swing.JLabel SalesforceTestAutoLabel;
    // End of variables declaration                   
}
